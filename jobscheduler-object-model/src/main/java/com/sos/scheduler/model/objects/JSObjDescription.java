package com.sos.scheduler.model.objects;

import com.sos.vfs.common.interfaces.ISOSVirtualFile;
import com.sos.scheduler.model.SchedulerObjectFactory;
import com.sos.scheduler.model.objects.Job.Description;

/** \class JSObjectDescription
 * 
 * \brief JSObjectDescription -
 * 
 * \see http://www.sos-berlin.com/doc/en/scheduler.doc/xml/job.xml
 * 
 * \details
 *
 *
 * <p style="text-align:center">
 * <br />
 * --------------------------------------------------------------------------- <br />
 * APL/Software GmbH - Berlin <br />
 * ##### generated by ClaviusXPress (http://www.sos-berlin.com) ######### <br />
 * ---------------------------------------------------------------------------
 * </p>
 * \author oh
 * 
 * @version $Id$ \see reference
 *
 *          Created on 03.02.2011 16:35:42 */
/** @author oh */
public class JSObjDescription extends Description {

    private final String conClassName = "JSObjectDescription";

    public JSObjDescription(final SchedulerObjectFactory schedulerObjectFactory) {
        objFactory = schedulerObjectFactory;
    }

    public JSObjDescription(final SchedulerObjectFactory schedulerObjectFactory, final Job origOrder) {
        objFactory = schedulerObjectFactory;
        setObjectFieldsFrom(origOrder);
        afterUnmarshal();
    }

    public JSObjDescription(final SchedulerObjectFactory schedulerObjectFactory, final ISOSVirtualFile pobjVirtualFile) {
        objFactory = schedulerObjectFactory;
        final Job ObjDescription = (Job) unMarshal(pobjVirtualFile);
        setObjectFieldsFrom(ObjDescription);
        setHotFolderSrc(pobjVirtualFile);
        afterUnmarshal();
    }

    private void afterUnmarshal() {
        @SuppressWarnings("unused")
        final String conMethodName = conClassName + "::afterUnmarchal";
    } // public afterUnmarshal

}
