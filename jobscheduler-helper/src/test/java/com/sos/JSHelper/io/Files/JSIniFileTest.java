package com.sos.JSHelper.io.Files;

/** \class JSIniFileTest
 * 
 * \brief JSIniFileTest -
 * 
 * \details
 *
 *
 * \code .... code goes here ... \endcode
 *
 * <p style="text-align:center">
 * <br />
 * --------------------------------------------------------------------------- <br />
 * APL/Software GmbH - Berlin <br />
 * ##### generated by ClaviusXPress (http://www.sos-berlin.com) ######### <br />
 * ---------------------------------------------------------------------------
 * </p>
 * \author KB \version $Id$ \see reference
 *
 * Created on 26.08.2011 21:31:13 */

import org.junit.*;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import java.io.File;
import java.util.Map;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertTrue;

/** @author KB */
public class JSIniFileTest {

    private static final String conIniFileName = "src/test/resources/jade_settings.ini";
    private static final Logger LOGGER = LoggerFactory.getLogger(JSIniFileTest.class);
    private JSIniFile objF = null;

    @Before
    public void setUp() throws Exception {
        objF = new JSIniFile(conIniFileName);
    }

    @Test
    public final void testJSIniFile() {
        assertTrue("is not null", objF != null);
    }

    @Test
    public final void testSections() {
        Map<String, SOSProfileSection> objS = objF.getSections();
        assertTrue("is not null", objS != null);
        LOGGER.debug("number of sections = " + objS.size());
        for (SOSProfileSection objPS : objS.values()) {
            LOGGER.debug(objPS.getName());
            for (SOSProfileEntry objEntry : objPS.getEntries().values()) {
                LOGGER.debug("     " + objEntry.getName() + " = " + objEntry.getValue());
            }
        }
    }

    @Test
    @Ignore("Test set to Ignore for later examination, fails in Jenkins build")
    public final void testSetValue() {
        SOSProfileSection obj = objF.getSection("do_sftp");
        assertEquals("section name not ok", "do_sftp", obj.strSectionName);
        obj.addEntry("Test", "HalloTest");
        SOSProfileEntry objE = obj.getEntry("protocol");
        String strT = objE.getValue();
        assertEquals("Entry Value test failed", "sftp", strT);
    }

    @Test
    @Ignore("Test set to Ignore for later examination, fails in Jenkins build")
    public final void testDeleteValue() {
        SOSProfileSection obj = objF.getSection("do_sftp");
        assertEquals("section name not ok", "do_sftp", obj.strSectionName);
        obj.addEntry("Test", "HalloTest");
        obj.deleteEntry("protocol");
        SOSProfileEntry objE = obj.getEntry("protocol");
        assertEquals("Entry delete failed", null, objE);
    }

    @Test
    @Ignore("Test set to Ignore for later examination, fails in Jenkins build")
    public final void testSectionNameString() {
        SOSProfileSection obj = objF.getSection("do_sftp");
        assertEquals("section name not ok", "do_sftp", obj.strSectionName);
    }

 
    @Test
    public final void testToString() {
        LOGGER.debug(objF.toString());
    }

    @Test
    @Ignore("Test set to Ignore for later examination")
    public final void testSaveAs() {
        String strSaveAsFileName = JSFile.getTempdir() + "/SaveAs.ini";
        new File(strSaveAsFileName).delete();
        objF.saveAs(strSaveAsFileName);
        assertTrue("File exists ", new File(strSaveAsFileName).exists());
    }

    @Test
    public final void testCreateInifile() {
        String strNewIniFileName = JSFile.getTempdir() + "/CreateNew.ini";
        JSIniFile objNew = new JSIniFile(strNewIniFileName);
        objNew.delete();
        SOSProfileSection objS = objNew.addSection("Test2");
        objS.addEntry("Test", "ValueOfTest");
        objS = objNew.addSection("Test3");
        objS.addEntry("Test", "ValueOfTest");
        objNew.save();
        assertTrue("File exists ", new File(strNewIniFileName).exists());
    }

}